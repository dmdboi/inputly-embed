let id="";const a=async e=>fetch(url+id,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>e.json())).then((e=>e));function m(){if(id=window.document.getElementById("inputly").getAttribute("form"),!id)throw Error("No Form ID specified");const e=document.createElement("l");e.href="../build/tailwind.min.css",e.type="text/css",e.rel="stylesheet",e.media="screen",document.getElementsByTagName("head")[0].appendChild(e);const t=document.createElement("div");t.className="absolute bottom-0 right-0 p-4";const n=document.createElement("div");n.className="w-full flex justify-end",n.id="i-fw",n.style.display="none",t.appendChild(n);n.innerHTML='<div class="w-96 mb-4 border border-gray-200 rounded-xl px-4 py-4 shadow-xl">\n  <div class="bg-green-100 text-sm text-green-700 p-4 rounded" style="display: none;" id="i-success">\n    <p>Thank you for the f!</p>\n  </div>\n  <div class="bg-red-100 text-sm text-red-700 p-4 rounded" style="display: none;" id="i-error">\n    <p>There was an error submitting this form</p>\n  </div>\n  <form class="space-y-4" id="i-form" method="POST"">\n    <div>\n      <label for="email" class="block text-sm font-medium text-gray-700">Email Address</label>\n      <div class="mt-1 flex rounded-md shadow-sm">\n        <input type="text" name="email" autocomplete="email" placeholder="John@doe.co.uk" id="i-email" required\n          class="block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-blue-500 focus:ring-blue-500 sm:text-sm">\n      </div>\n    </div>\n    <div>\n      <label for="rating" class="block text-sm font-medium text-gray-700">How would you rate this experience?</label>\n      <div class="mt-1 flex rounded-md shadow-sm">\n        <input type="number" name="rating" id="i-rating" min="0" max="10" placeholder="5" required\n          class="block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-blue-500 focus:ring-blue-500 sm:text-sm">\n      </div>\n    </div>\n    <div>\n      <label for="message" class="block text-sm font-medium text-gray-700">Feedback</label>\n      <div class="mt-1 flex rounded-md shadow-sm">\n        <textarea type="text" name="message" id="i-message" required placeholder="What\'s on your mind?"\n          class="block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-blue-500 focus:ring-blue-500 sm:text-sm"></textarea>\n      </div>\n    </div>\n    <div>\n      <div class="mt-1 flex rounded-md shadow-sm">\n        <button onclick="subF();" type="button"\n          class="text-center text-white transition duration-200 ease-in w-full px-3 py-2 rounded-md bg-blue-600 hover:bg-blue-500">\n          Submit\n        </button>\n      </div>\n      <div class="text-sm text-gray-500 text-center mt-2">\n        Powered by <a href=\'https://inputly.io\' class=\'text-blue-500\'>Inputly</a>\n      </div>\n    </div>\n  </form>\n</div>';t.innerHTML+='<div class="flex justify-end"><button onclick="tog(\'i-fw\')" class="text-lg bg-blue-800 hover:bg-blue-700 transition duration-200 ease-in hover:-translate-y-1 text-white rounded-full h-8 w-8">?</button><div>',document.body.appendChild(t)}async function subF(){const e=document.gebi("i-email").value,t=document.gebi("i-rating").value,n=document.gebi("i-message").value,i=await api({email:e,rating:t,message:n});return e.value="",t.value="",n.value="",i.success?(tog("i-form"),tog("i-success")):i.success?void 0:(tog("i-form"),tog("i-error"))}function gebi(e){return document.getElementById(e)}function tog(e){let t=gebi(e);return""===t.style.display?t.style.display="none":t.style.display=""}window.onload=()=>{url="https://api.inputly.io/f/",m()};
